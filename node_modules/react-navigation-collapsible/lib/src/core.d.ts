import * as React from 'react';
import { Animated, NativeSyntheticEvent, NativeScrollEvent } from 'react-native';
import { Params as createHeaderBackgroundParams } from './createHeaderBackground';
declare enum CollapsibleHeaderType {
    Default = 0,
    SubHeader = 1
}
export declare type Collapsible = {
    onScroll: (event: NativeSyntheticEvent<NativeScrollEvent>) => void;
    onScrollWithListener: (listener: (event: NativeSyntheticEvent<NativeScrollEvent>) => void) => (event: NativeSyntheticEvent<NativeScrollEvent>) => void;
    containerPaddingTop: number;
    scrollIndicatorInsetTop: number;
    positionY: Animated.AnimatedValue;
    offsetY: Animated.AnimatedValue;
    translateY: Animated.AnimatedInterpolation;
    progress: Animated.AnimatedInterpolation;
    opacity: Animated.AnimatedInterpolation;
    showHeader: () => void;
};
export declare type UseCollapsibleOptions = {
    navigationOptions?: {
        [key: string]: any;
    };
    config?: {
        useNativeDriver?: boolean;
        elevation?: number;
        collapsedColor?: string;
        disableOpacity?: boolean;
        createHeaderBackground?: (params: createHeaderBackgroundParams) => React.ReactNode;
    };
};
declare const useCollapsibleHeader: (options?: UseCollapsibleOptions, collapsibleHeaderType?: CollapsibleHeaderType) => Collapsible;
declare const useCollapsibleSubHeader: (options?: UseCollapsibleOptions) => Collapsible;
export { useCollapsibleHeader, useCollapsibleSubHeader };
