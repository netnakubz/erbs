/**
 * Flowtype definitions for core
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.14.1
 */

import * as React from "react";
import {
  Animated,
  NativeSyntheticEvent,
  NativeScrollEvent,
} from "react-native";
import { Params as createHeaderBackgroundParams } from "./createHeaderBackground";

declare var CollapsibleHeaderType: {|
  +Default: 0, // 0
  +SubHeader: 1, // 1
|};
export type Collapsible = {
  onScroll: (event: NativeSyntheticEvent<NativeScrollEvent>) => void,
  onScrollWithListener: (
    listener: (event: NativeSyntheticEvent<NativeScrollEvent>) => void
  ) => (event: NativeSyntheticEvent<NativeScrollEvent>) => void,
  containerPaddingTop: number,
  scrollIndicatorInsetTop: number,
  positionY: Animated$AnimatedValue,
  offsetY: Animated$AnimatedValue,
  translateY: Animated$AnimatedInterpolation,
  progress: Animated$AnimatedInterpolation,
  opacity: Animated$AnimatedInterpolation,
  showHeader: () => void,
  ...
};
export type UseCollapsibleOptions = {
  navigationOptions?: {
    [key: string]: any,
    ...
  },
  config?: {
    useNativeDriver?: boolean,
    elevation?: number,
    collapsedColor?: string,
    disableOpacity?: boolean,
    createHeaderBackground?: (
      params: createHeaderBackgroundParams
    ) => React.Node,
    ...
  },
  ...
};
declare var useCollapsibleHeader: (
  options?: UseCollapsibleOptions,
  collapsibleHeaderType?: $Values<typeof CollapsibleHeaderType>
) => Collapsible;
declare var useCollapsibleSubHeader: (
  options?: UseCollapsibleOptions
) => Collapsible;
declare export { useCollapsibleHeader, useCollapsibleSubHeader };
